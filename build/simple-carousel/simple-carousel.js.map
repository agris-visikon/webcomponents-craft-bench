{"version":3,"file":"simple-carousel.js","sourceRoot":"","sources":["../../src/simple-carousel/simple-carousel.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {\n  customElement,\n  property,\n  queryAssignedElements,\n  state,\n} from 'lit/decorators.js';\nimport {styleMap} from 'lit/directives/style-map.js';\n\nimport './slide-button.js';\nimport {\n  BOOTSTRAP_CHEVRON_LEFT,\n  BOOTSTRAP_CHEVRON_RIGHT,\n  SLIDE_LEFT_OUT,\n  SLIDE_RIGHT_OUT,\n  SLIDE_LEFT_IN,\n  SLIDE_RIGHT_IN,\n  AnimationTuple,\n} from './constants.js';\n\n@customElement('simple-carousel')\nexport class SimpleCarousel extends LitElement {\n  static override styles = css`\n    ::slotted(.slide-hidden) {\n      display: none;\n    }\n    /** So the elements all overlap **/\n    ::slotted(*) {\n      position: absolute;\n      padding: 1em;\n    }\n    :host {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n    }\n    #container {\n      border-radius: 24px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex: 1;\n      margin: 0 18px;\n      padding: 1em;\n      overflow: hidden;\n      position: relative;\n      box-shadow: var(--shadow, gray) 0.2em 0.2em 0.4em,\n                  var(--highlight, white) -0.1em -0.1em 0.2em;\n    }\n  `;\n  @state() private containerHeight = 0;\n  @property({type: Number}) slideIndex = 0;\n\n  @queryAssignedElements()\n  private readonly slideElements!: HTMLElement[];\n\n  override render() {\n    const containerStyles = {\n      height: `${this.containerHeight}px`,\n    };\n    return html`\n    <slide-button\n    @click=${this.navigateToPrevSlide}>\n    ${BOOTSTRAP_CHEVRON_LEFT}\n    </slide-button>\n    <div id=\"container\"\n    style=\"${styleMap(containerStyles)}\">\n    <slot></slot>\n    </div>\n    <slide-button\n      @click=${this.navigateToNextSlide}>\n      ${BOOTSTRAP_CHEVRON_RIGHT}\n    </slide-button>\n    `;\n  }\n\n  override firstUpdated() {\n    this.containerHeight = getMaxElHeight(this.slideElements);\n    this.initializeSlide();\n  }\n\n  private initializeSlide() {\n    for (let i = 0; i < this.slideElements.length; i++) {\n      if (i === this.slideIndex) {\n        showSlide(this.slideElements[i]);\n      } else {\n        hideSlide(this.slideElements[i]);\n      }\n    }\n  }\n  private changeSlide(offset: number) {\n    const slideCount = this.slideElements.length;\n    this.slideIndex =\n      (slideCount + ((this.slideIndex + offset) % slideCount)) % slideCount;\n  }\n  navigateToNextSlide = () => {\n    this.navigateWithAnimation(1, SLIDE_LEFT_OUT, SLIDE_RIGHT_IN);\n  };\n  navigateToPrevSlide = () => {\n    this.navigateWithAnimation(-1, SLIDE_RIGHT_OUT, SLIDE_LEFT_IN);\n  };\n  private async navigateWithAnimation(\n    nextSlideOffset: number,\n    leavingAnimation: AnimationTuple,\n    enteringAnimation: AnimationTuple\n  ) {\n    const elLeaving = this.slideElements[this.slideIndex];\n    const leavingAnim = elLeaving.animate(\n      leavingAnimation[0],\n      leavingAnimation[1]\n    );\n\n    // Change slide\n    this.changeSlide(nextSlideOffset);\n\n    // Entering slide\n    const newSlideEl = this.slideElements[this.slideIndex];\n\n    // Show the new slide\n    showSlide(newSlideEl);\n\n    // Teleport it out of view and animate it in\n    const enteringAnim = newSlideEl.animate(\n      enteringAnimation[0],\n      enteringAnimation[1]\n    );\n\n    try {\n      // Wait for animations\n      await Promise.all([leavingAnim.finished, enteringAnim.finished]);\n\n      // Hide the element that left\n      hideSlide(elLeaving);\n    } catch {\n      /* Animation was cancelled */\n    }\n  }\n}\n\nfunction hideSlide(el: HTMLElement) {\n  el.classList.add('slide-hidden');\n}\n\nfunction showSlide(el: HTMLElement) {\n  el.classList.remove('slide-hidden');\n}\n\nfunction getMaxElHeight(els: HTMLElement[]): number {\n  return Math.max(0, ...els.map((el) => el.getBoundingClientRect().height));\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'simple-carousel': SimpleCarousel;\n  }\n}\n"]}